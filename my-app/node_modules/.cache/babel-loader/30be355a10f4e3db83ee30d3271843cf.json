{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\LogoutButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport { useContext } from 'react';\nimport { MyContext } from '../contexts/MyContext'; //creation of a simple button for logout. It has functionality unlike the login button which functions purely as a link.\n//It utilises the logout user function for the MyContext.js parental state.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button() {\n  _s();\n\n  //importing the logout user method from the parental context file\n  const {\n    logoutUser\n  } = useContext(MyContext); // If user Logged in\n\n  {\n    return (\n      /*#__PURE__*/\n      //when button is pressed, logout the user\n      _jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-primary\",\n        onClick: logoutUser,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)\n    );\n  }\n} //Wrapping the previously created button in Nav. This allows it to link to a specified url.\n//React is unique in that it does not constantly refresh. It re-renders what changes and keeps what is the same.\n//Nav enables this behavior. Works with the <Switch> and <Router> our components are wrapped in (see App.js)\n//When the user is logged out they are brought to the home page\n\n\n_s(Button, \"nfONNJ8G2YrtIxwXbK7V7ODRN6U=\");\n\n_c = Button;\n\nconst LogoutButton = () => /*#__PURE__*/_jsxDEV(Nav, {\n  className: \"mr-auto\",\n  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n    as: RouterNavLink,\n    to: \"/\",\n    exact: true,\n    activeClassName: \"router-link-exact-active\",\n    children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 5\n}, this);\n\n_c2 = LogoutButton;\nexport default LogoutButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"LogoutButton\");","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/LogoutButton.jsx"],"names":["React","NavLink","RouterNavLink","Nav","useContext","MyContext","Button","logoutUser","LogoutButton"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyC,kBAAzC;AACA,SAAUC,GAAV,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAAQC,SAAR,QAAwB,uBAAxB,C,CAKA;AACA;;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AAEf;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeH,UAAU,CAACC,SAAD,CAA/B,CAHe,CAMf;;AACA;AACI;AAAA;AACQ;AACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,yBAA5B;AAAsD,QAAA,OAAO,EAAEE,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAKH;AACF,C,CAID;AACA;AACA;AACA;;;GArBSD,M;;KAAAA,M;;AAsBT,MAAME,YAAY,GAAG,mBAEjB,QAAC,GAAD;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA,yBACE,QAAC,GAAD,CAAK,IAAL;AACE,IAAA,EAAE,EAAEN,aADN;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,eAAe,EAAC,0BALlB;AAAA,2BAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFJ;;MAAMM,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport {  Nav } from \"react-bootstrap\";\r\nimport { useContext } from 'react';\r\nimport {MyContext} from '../contexts/MyContext'\r\n\r\n\r\n\r\n\r\n//creation of a simple button for logout. It has functionality unlike the login button which functions purely as a link.\r\n//It utilises the logout user function for the MyContext.js parental state.\r\nfunction Button(){\r\n\r\n  //importing the logout user method from the parental context file\r\n  const {logoutUser} = useContext(MyContext);\r\n\r\n\r\n  // If user Logged in\r\n  {\r\n      return(\r\n              //when button is pressed, logout the user\r\n              <button type=\"button\" class=\"btn btn-outline-primary\" onClick={logoutUser}>Logout</button>\r\n\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\n//Wrapping the previously created button in Nav. This allows it to link to a specified url.\r\n//React is unique in that it does not constantly refresh. It re-renders what changes and keeps what is the same.\r\n//Nav enables this behavior. Works with the <Switch> and <Router> our components are wrapped in (see App.js)\r\n//When the user is logged out they are brought to the home page\r\nconst LogoutButton = () => (\r\n    \r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link\r\n        as={RouterNavLink}\r\n        \r\n        to=\"/\"\r\n        exact\r\n        activeClassName=\"router-link-exact-active\"\r\n      >\r\n        <Button />\r\n      </Nav.Link>\r\n    </Nav>\r\n    \r\n    );\r\n\r\n\r\n\r\nexport default LogoutButton;\r\n\r\n"]},"metadata":{},"sourceType":"module"}