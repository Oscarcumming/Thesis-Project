{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\ProfileDashboard.jsx\";\nimport React, { useContext } from 'react';\nimport Axios from \"axios\";\nimport { MyContext } from '../contexts/MyContext';\nimport { Component } from 'react';\nimport { UpdateHorse } from '.';\nimport { SpecificPrediction } from '.';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DischargeHorse } from '.'; //This is the main page of the user accounts. It is here that horses can be added, a complete history of predictions can be accessed, a list of all current horses are displayed\n//and their specific predictions can be viewed. Additionally horses can be deleted, edited and discharged from service.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileDashboard extends Component {\n  //Importing the MyContext.js state values. We are interested in theUser as we are retrieving data specific to the user account.\n  //MyContext is acting as a parental component. It passes its prop values down to this component. React is one directional meaning that props \n  //cannot be passed back up to the parent.\n  constructor(props) {\n    super(props);\n\n    this.getHorses = async () => {\n      //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the the JWT token (and is therefore logged in)\n\n      if (loginToken) {\n        //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \n        //to request the API for database information.\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the users registered horses\n\n        const {\n          data\n        } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\n        console.log(data);\n        console.log(data.user); // If user information is successfully received, add the horses to the 'horses' array in state\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            horses: data.user\n          });\n        }\n      }\n    };\n\n    this.deleteHorse = param => e => {\n      console.log(param); //takes the 'horse_id' from the inputted method parameter and assigns it to an object\n\n      const params = {\n        horse_id: param\n      }; //axios makes a post request to our local server API. It passes the above params. This will delete the horse from the sql database.\n\n      Axios.post(\"http://localhost/php-colicapp/deletehorse.php\", params).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        isLoading: false\n      }); //rerun the 'getHorses()' - this updates the display - without you would have to refresh the page\n\n      this.getHorses();\n      window.location.reload();\n    };\n\n    this.getHorseNameIDValue = (param, param2) => e => {\n      console.log(param);\n      this.setState({\n        selectedHorseID: param,\n        selectedHorseName: param2\n      });\n      console.log(this.selectedHorseID);\n    };\n\n    this.handleBackClick = event => {\n      this.setState({\n        selectedHorseID: \"\"\n      });\n    };\n\n    this.editHorseValues = param => e => {\n      console.log(param);\n      this.setState({\n        editHorse: param\n      });\n      console.log(this.editHorse);\n    };\n\n    this.dischargeHorse = param => e => {\n      console.log(param);\n      this.setState({\n        dischargeValue: param\n      });\n      console.log(this.dischargeValue);\n    };\n\n    this.handleBackClick = event => {\n      this.setState({\n        selectedHorseID: \"\",\n        editHorse: \"\",\n        dischargeValue: \"\"\n      });\n    };\n\n    this.state = {\n      //holds the horses that our account has saved\n      horses: [],\n      //These hold props to be passed to our children components\n      //selectedHorseID and selectedHorseNAme passed to SpecificPrediction.jsx component:\n      selectedHorseID: \"\",\n      selectedHorseName: \"\",\n      //used to hold and control the horse id of the selected horse to be discharged. This value also triggers a render condition.\n      dischargeValue: \"\",\n      //used to hold and control the horse id of the selected horse to be edited. This value also triggers a render condition.\n      editHorse: \"\"\n    }; //allows these methods to alter the state of component\n\n    this.getHorses = this.getHorses.bind(this);\n    this.getHorseNameIDValue = this.getHorseNameIDValue.bind(this);\n    this.dischargeHorse = this.dischargeHorse.bind(this);\n  } //method gets all of the of the horses registered to the account and adds them to the state of the 'horses' array\n  //this is handled in componentWillMount() meaning before any process or rendering begins, getHorses will run. This ensures our array \n  //has the horse values before anything else happens\n\n\n  //componentWillMount() runs before any other code. The 'get account horses' into array is the first process to be carried out.\n  componentWillMount() {\n    this.getHorses();\n  } //controls modal displays\n\n\n  toggleModal() {\n    this.state.setIsOpen(!this.state.isOpen);\n  }\n\n  render() {\n    //creating objects from the current state. This allows access to its values. \n    //This can also be done without declaring an object this.state.value eg. \"this.state.horses.map\"\n    //Both methods are used.\n    const selectedHorseID = this.state.selectedHorseID;\n    const selectedHorseName = this.state.selectedHorseName;\n    const editHorse = this.state.editHorse;\n    const dischargeValue = this.state.dischargeValue; // if no horse value is selected render all available user registered horses\n\n    if (selectedHorseID === \"\" && editHorse === \"\" && dischargeValue === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"YOUR HORSES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-sm  text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/addhorse\",\n                class: \"btn spacing btn-default btn btn-dark\",\n                children: \"Add Horses \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/history\",\n                class: \"btn spacing btn-default btn btn-dark\",\n                children: \"See Prediction History \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"table-responsive-sm \",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table table-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                class: \"thead-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Horse Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Horse Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"weight (kg)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"height (cm)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Colour\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"HorseBreed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Client\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Horse Passport Number  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.horses.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.horse_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.horse_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.weight_kg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.height_cm\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.colour\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.horse_breed\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.client_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.passport_no\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-dark\",\n                      onClick: this.getHorseNameIDValue(item.horse_id, item.horse_name),\n                      children: \"See More\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-dark\",\n                      onClick: this.editHorseValues(item.horse_id),\n                      children: \"Edit Horse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-dark\",\n                      onClick: this.deleteHorse(item.horse_id),\n                      children: \"Remove Horse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-dark\",\n                      onClick: this.dischargeHorse(item.horse_id),\n                      children: \"Discharge Horse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)]\n                }, item.horseloop, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this);\n    } else if (selectedHorseID !== \"\" && editHorse === \"\" && dischargeValue === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(SpecificPrediction, {\n            selectedHorseID: selectedHorseID,\n            selectedHorseName: selectedHorseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.handleBackClick,\n                  class: \"btn btn-default btn btn-dark spacing\",\n                  children: \"Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this);\n    } else if (selectedHorseID === \"\" && editHorse !== \"\" && dischargeValue === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(UpdateHorse, {\n            editHorse: editHorse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.handleBackClick,\n                  class: \"btn btn-default btn btn-dark spacing\",\n                  children: \"Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this);\n    } else if (selectedHorseID === \"\" && editHorse === \"\" && dischargeValue !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(DischargeHorse, {\n            dischargeValue: dischargeValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.handleBackClick,\n                  class: \"btn btn-default btn btn-dark spacing\",\n                  children: \"Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} //establishing context state for user\n\n\nProfileDashboard.contextType = MyContext;\nProfileDashboard.contextType = MyContext;\nexport default ProfileDashboard;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/ProfileDashboard.jsx"],"names":["React","useContext","Axios","MyContext","Component","UpdateHorse","SpecificPrediction","Container","Link","DischargeHorse","ProfileDashboard","constructor","props","getHorses","loginToken","localStorage","getItem","defaults","headers","common","data","get","console","log","user","success","setState","state","isAuth","horses","deleteHorse","param","e","params","horse_id","post","then","response","catch","error","isLoading","window","location","reload","getHorseNameIDValue","param2","selectedHorseID","selectedHorseName","handleBackClick","event","editHorseValues","editHorse","dischargeHorse","dischargeValue","bind","componentWillMount","toggleModal","setIsOpen","isOpen","render","map","item","horse_name","weight_kg","height_cm","colour","horse_breed","client_name","status","description","passport_no","horseloop","contextType"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport Axios from \"axios\";\r\nimport { MyContext } from '../contexts/MyContext'\r\nimport { Component } from 'react';\r\nimport { UpdateHorse } from '.';\r\nimport { SpecificPrediction } from '.';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { DischargeHorse } from '.';\r\n\r\n\r\n//This is the main page of the user accounts. It is here that horses can be added, a complete history of predictions can be accessed, a list of all current horses are displayed\r\n//and their specific predictions can be viewed. Additionally horses can be deleted, edited and discharged from service.\r\nclass ProfileDashboard extends Component {\r\n\r\n  //Importing the MyContext.js state values. We are interested in theUser as we are retrieving data specific to the user account.\r\n  //MyContext is acting as a parental component. It passes its prop values down to this component. React is one directional meaning that props \r\n  //cannot be passed back up to the parent.\r\n  static contextType = MyContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n\r\n      //holds the horses that our account has saved\r\n      horses: [],\r\n\r\n      //These hold props to be passed to our children components\r\n      //selectedHorseID and selectedHorseNAme passed to SpecificPrediction.jsx component:\r\n      selectedHorseID: \"\",\r\n      selectedHorseName: \"\",\r\n      //used to hold and control the horse id of the selected horse to be discharged. This value also triggers a render condition.\r\n      dischargeValue :\"\",\r\n       //used to hold and control the horse id of the selected horse to be edited. This value also triggers a render condition.\r\n      editHorse: \"\",\r\n    }\r\n\r\n    //allows these methods to alter the state of component\r\n    this.getHorses = this.getHorses.bind(this);\r\n    this.getHorseNameIDValue = this.getHorseNameIDValue.bind(this);\r\n    this.dischargeHorse = this.dischargeHorse.bind(this);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //method gets all of the of the horses registered to the account and adds them to the state of the 'horses' array\r\n  //this is handled in componentWillMount() meaning before any process or rendering begins, getHorses will run. This ensures our array \r\n  //has the horse values before anything else happens\r\n  getHorses = async () => {\r\n\r\n\r\n    //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\r\n    const loginToken = localStorage.getItem('loginToken');\r\n\r\n    // If inside the local-storage has the the JWT token (and is therefore logged in)\r\n    if (loginToken) {\r\n\r\n      //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \r\n      //to request the API for database information.\r\n      Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n\r\n      // Fetching the users registered horses\r\n      const { data } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\r\n      console.log(data)\r\n\r\n\r\n      console.log(data.user)\r\n\r\n      // If user information is successfully received, add the horses to the 'horses' array in state\r\n      if (data.success && data.user) {\r\n        this.setState({\r\n          ...this.state,\r\n          isAuth: true,\r\n          horses: data.user\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  //method receives the loop outputted 'horse_id' from the 'horses' array. This is sent by an onclick event of the rendered output.\r\n  //Each horse has a 'delete' button which passes back the the 'horse_id' to the 'deleteHorse' method parameter \r\n  deleteHorse = param => e => {\r\n\r\n    console.log(param)\r\n\r\n    //takes the 'horse_id' from the inputted method parameter and assigns it to an object\r\n    const params = {\r\n\r\n      horse_id: param\r\n\r\n    };\r\n\r\n\r\n    //axios makes a post request to our local server API. It passes the above params. This will delete the horse from the sql database.\r\n    Axios.post(\"http://localhost/php-colicapp/deletehorse.php\", (params))\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    this.setState({ isLoading: false });\r\n\r\n    //rerun the 'getHorses()' - this updates the display - without you would have to refresh the page\r\n    this.getHorses();\r\n\r\n    window.location.reload();\r\n\r\n\r\n  }\r\n\r\n\r\n  //This method is used to set the 'selectedHorseID' and 'selectedHorseName' states. 'SelectHorseID' takes the param 'horse_id' and 'SelectHorseName' takes the param 'horse_name'.\r\n  // 'SelectHorseID' creates a render condition and 'SelectedHorseNAme' allows us to output the selected horses name wherever we need. If this is null, the 'editHorse' and 'dischargeHorse' state is null,\r\n  //the horses array will display, showing all of the registered horses to the account. When there is a 'selectHorseID' state value,\r\n  //the render changes and displays the selected horse's predictions that have been made.\r\n  getHorseNameIDValue = (param, param2) => e => {\r\n\r\n    console.log(param)\r\n\r\n\r\n    this.setState({\r\n      selectedHorseID: param,\r\n      selectedHorseName: param2,\r\n    });\r\n    console.log(this.selectedHorseID)\r\n\r\n  };\r\n\r\n  //Back click set the 'selectedHorseID' state to null, resetting the render from showing the horse-specific predictions to a the default output - the list of registered horses\r\n  handleBackClick = (event) => {\r\n    this.setState({ selectedHorseID: \"\" });\r\n  }\r\n\r\n  //This method is used to set the 'editHorse' state. 'editHorse' takes the param 'horse_id'.\r\n  // 'editHorse' creates a render condition. If this is null, 'dischargeHorse' and the 'selectHorseID' state is null,\r\n  //the horses array will display, showing all of the registered horses to the account. When there is a 'editHorse' state value,\r\n  //the render changes and displays an edit form to change the selected horse information\r\n  editHorseValues = (param) => e => {\r\n\r\n    console.log(param)\r\n\r\n    this.setState({\r\n      editHorse: param,\r\n\r\n    });\r\n    console.log(this.editHorse)\r\n\r\n  };\r\n\r\n    //This method is used to set the 'dischargeValue' state. 'dischargeValue' takes the param 'horse_id'.\r\n  // 'dischargeValue' creates a render condition. If this is null, 'editHorse\" and the 'selectHorseID' state is null,\r\n  //the horses array will display, showing all of the registered horses to the account. When there is a 'dischargeHorse' state value,\r\n  //the render changes and displays 3 buttons to change the current 'status' value of the horses\r\n  dischargeHorse = (param) => e => {\r\n\r\n    console.log(param)\r\n\r\n    this.setState({\r\n      dischargeValue: param,\r\n\r\n    });\r\n    console.log(this.dischargeValue)\r\n\r\n  };\r\n\r\n  handleBackClick = (event) => {\r\n    this.setState({ selectedHorseID: \"\", editHorse: \"\", dischargeValue: \"\" });\r\n  }\r\n\r\n\r\n\r\n  //componentWillMount() runs before any other code. The 'get account horses' into array is the first process to be carried out.\r\n  componentWillMount() {\r\n    this.getHorses();\r\n\r\n  }\r\n\r\n  //controls modal displays\r\n  toggleModal() {\r\n    this.state.setIsOpen(!this.state.isOpen);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    //creating objects from the current state. This allows access to its values. \r\n    //This can also be done without declaring an object this.state.value eg. \"this.state.horses.map\"\r\n    //Both methods are used.\r\n    const selectedHorseID = this.state.selectedHorseID;\r\n    const selectedHorseName = this.state.selectedHorseName;\r\n    const editHorse = this.state.editHorse\r\n    const dischargeValue = this.state.dischargeValue\r\n\r\n\r\n    // if no horse value is selected render all available user registered horses\r\n    if (selectedHorseID === \"\" && editHorse === \"\" && dischargeValue ===\"\") {\r\n\r\n\r\n      return (\r\n\r\n        <div>\r\n          <div>\r\n            <h1 className=\"title\">YOUR HORSES</h1>\r\n          </div>\r\n\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm  text-center\">\r\n                {/* two buttons that redirect to /addhorse and /history url. /addhorse renders 'AddHorse.jsx' and /history' renders 'PredictionHistory.jsx' */}\r\n                <Link to=\"/addhorse\" class=\"btn spacing btn-default btn btn-dark\">Add Horses </Link>\r\n                <Link to=\"/history\" class=\"btn spacing btn-default btn btn-dark\">See Prediction History </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* table headers */}\r\n          <div class=\"container-fluid\">\r\n            <div class=\"table-responsive-sm \">\r\n              <table class=\"table table-light\">\r\n                <thead class=\"thead-dark\">\r\n                  <tr >\r\n                    <th >Horse Id</th>\r\n                    <th>Horse Name</th>\r\n                    <th>weight (kg)</th>\r\n                    <th>height (cm)</th>\r\n                    <th>Colour</th>\r\n                    <th>HorseBreed</th>\r\n                    <th>Client</th>\r\n                    <th>Status</th>\r\n                    <th>Description</th>\r\n                    <th>Horse Passport Number  </th>\r\n                    <th>  </th>\r\n                    <th>  </th>\r\n                    <th>  </th>\r\n                    <th>  </th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {/* table values */}\r\n                <tbody >\r\n                  {/* A loop is used to output the 'horses' 2D array into the table contents .  */}\r\n                  {this.state.horses.map((item =>\r\n                    <tr key={item.horseloop} >\r\n                      <td >{item.horse_id}</td>\r\n                      <td>{item.horse_name}</td>\r\n                      <td>{item.weight_kg}</td>\r\n                      <td>{item.height_cm}</td>\r\n                      <td>{item.colour}</td>\r\n                      <td>{item.horse_breed}</td>\r\n                      <td>{item.client_name}</td>\r\n                      <td>{item.status}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.passport_no}</td>\r\n\r\n                      <td>\r\n                        {/* Button sets the state of 'selectedHorseID', establishing the conditional render of the selected horse's predictions */}\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick={this.getHorseNameIDValue(item.horse_id, item.horse_name)}>\r\n                          See More\r\n                        </button>\r\n                      </td>\r\n\r\n                      <td>\r\n                        {/* Button sets the state of 'editHorse', establishing the conditional render of the edit horse form */}\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick={this.editHorseValues(item.horse_id)}>\r\n                          Edit Horse\r\n                        </button>\r\n                      </td>\r\n\r\n                      <td>\r\n                        {/* Button to take to delete horse */}\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick={this.deleteHorse(item.horse_id)}>\r\n                          Remove Horse\r\n                        </button>\r\n                      </td>\r\n\r\n                      <td>\r\n                        {/* Button to take to change value of the selected horse's discharge status */}\r\n                        <button type=\"button\" class=\"btn btn-dark\" onClick={this.dischargeHorse(item.horse_id)}>\r\n                          Discharge Horse\r\n                        </button>\r\n\r\n                      </td>\r\n\r\n\r\n                    </tr>\r\n                  ))}\r\n\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n      )\r\n    }\r\n\r\n\r\n\r\n    else if (selectedHorseID !== \"\" && editHorse === \"\" && dischargeValue === \"\") {\r\n\r\n      return (\r\n\r\n        <div>\r\n          <Container>\r\n            {/* render this when the this.state.selectedHorseID has value and this.state.editHorse and this.state.dischargeHorse has no value. It is passing the 'selectHorseID' as a prop to the component*/}\r\n            <SpecificPrediction selectedHorseID={selectedHorseID} selectedHorseName={selectedHorseName} />\r\n            {/* Button resets this.state.selectHorse to \"\" causing the other condition value to render (list of all horses that are on the account) */}\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col text-center\">\r\n                  <button onClick={this.handleBackClick} class=\"btn btn-default btn btn-dark spacing\">Back </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </Container>\r\n        </div>\r\n\r\n      )\r\n    }\r\n\r\n    else if (selectedHorseID === \"\" && editHorse !== \"\" && dischargeValue === \"\") {\r\n\r\n      return (\r\n\r\n        <div>\r\n          <Container>\r\n            {/* render this when the this.state.selectedHorseID and this.state.dischargeValue has no value and this.state.editHorse has value. It is passing the 'editHorse' as a prop to the component */}\r\n            <UpdateHorse editHorse={editHorse} />\r\n            {/* Button resets this.state.editHorse to \"\" causing the other condition value to render (list of all horses that are on the account) */}\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col text-center\">\r\n                  <button onClick={this.handleBackClick} class=\"btn btn-default btn btn-dark spacing\">Back </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </Container>\r\n        </div>\r\n\r\n      )\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    else if (selectedHorseID === \"\" && editHorse === \"\" && dischargeValue !== \"\") {\r\n\r\n      return (\r\n\r\n        <div>\r\n          <Container>\r\n            {/* render this when the this.state.selectedHorseID and this.state.editHorse has no value and this.state.dischargeValue has value. It is passing the 'dischargeValue' as a prop to the component */}\r\n            <DischargeHorse dischargeValue={dischargeValue} />\r\n            {/* Button resets this.state.dischargeValue to \"\" causing the other condition value to render (list of all horses that are on the account) */}\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col text-center\">\r\n                  <button onClick={this.handleBackClick} class=\"btn btn-default btn btn-dark spacing\">Back </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </Container>\r\n        </div>\r\n\r\n      )\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n//establishing context state for user\r\nProfileDashboard.contextType = MyContext;\r\n\r\nexport default ProfileDashboard;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}