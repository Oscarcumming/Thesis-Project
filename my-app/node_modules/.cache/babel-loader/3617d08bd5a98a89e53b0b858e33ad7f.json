{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\UpdateHorse.jsx\";\nimport Axios from \"axios\";\nimport React, { Component } from 'react';\nimport './InputForm.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button'; //A form that presents the current values of the selected horse to be changed. \n//The new values are edited in and then saved.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateHorse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getHorses = async () => {\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the JWT token\n\n      if (loginToken) {\n        //Adding JWT token to axios default header\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\n        console.log(data); //holds the result array\n\n        console.log(data.user); // If user information is successfully received, add the horses to the 'horses' array in state\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            horses: data.user\n          });\n        }\n      } //creating a new array to hold the 2D array of the selected horse\n\n\n      const horseArray = []; //a map loop is run through all of the users horses to match find the selected 'editHorse'. This is then pushed into the above array 'horseArray'\n\n      this.state.horses.map(horse => {\n        if (horse.horse_id === this.state.editHorse) horseArray.push(horse);\n      });\n      console.log(horseArray); //using the selected horse's  2D array values to set the 'selectedHorseInfo' state.\n\n      this.setState({\n        selectedHorseInfo: {\n          horse_id: this.state.editHorse,\n          horse_name: horseArray[0].horse_name,\n          weight_kg: horseArray[0].weight_kg,\n          height_cm: horseArray[0].height_cm,\n          colour: horseArray[0].colour,\n          description: horseArray[0].description,\n          horse_breed: horseArray[0].horse_breed,\n          client_name: horseArray[0].client_name,\n          status: 'Under Supervision',\n          passport_no: horseArray[0].passport_no\n        }\n      });\n      console.log(this.state.selectedHorseInfo);\n      this.setState({\n        preload: false\n      });\n    };\n\n    this.updateHorse = () => {\n      this.setState({\n        isLoading: true\n      }); //the information that will be posted to our database using axios. It reflects the current state of the 'selectedHorseInfo'\n\n      const params = {\n        horse_id: this.state.editHorse,\n        horse_name: this.state.selectedHorseInfo.horse_name,\n        weight_kg: this.state.selectedHorseInfo.weight_kg,\n        height_cm: this.state.selectedHorseInfo.height_cm,\n        colour: this.state.selectedHorseInfo.colour,\n        description: this.state.selectedHorseInfo.description,\n        horse_breed: this.state.selectedHorseInfo.horse_breed,\n        client_name: this.state.selectedHorseInfo.client_name,\n        status: 'Under Supervision',\n        passport_no: this.state.selectedHorseInfo.passport_no\n      };\n      console.log(params.horse_name, params.weight_kg, params.height_cm, params.colour, params.description, params.horse_breed, params.client_name, params.user_id, params.status, params.passport_no); //posting our parameters to the php which will update our sql database\n\n      Axios.post(\"http://localhost/php-colicapp/updatehorse.php\", params).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        isLoading: false\n      }); //refresh the window and bring the user back to the dashboard\n\n      window.location.reload();\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      var selectedHorseInfo = this.state.selectedHorseInfo;\n      selectedHorseInfo[name] = value;\n      this.setState({\n        selectedHorseInfo\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      preload: true,\n      editHorse: this.props.editHorse,\n      horses: [],\n      selectedHorseInfo: {\n        horse_id: \"\",\n        horse_name: \"\",\n        weight_kg: \"\",\n        height_cm: \"\",\n        colour: \"\",\n        description: \"\",\n        horse_breed: \"\",\n        client_name: \"\",\n        status: 'Under Supervision',\n        passport_no: \"\"\n      }\n    };\n  } //gets all horses that have been predicted with a matching userid gotten from the loginToken\n\n\n  //componentWillMount() runs before any other code. The 'get account horses' into array is the first process to be carried out.\n  componentWillMount() {\n    this.getHorses();\n  }\n\n  render() {\n    //creating variables to hold the isLoading and selectedHorseInfo states \n    const isLoading = this.state.isLoading;\n    const selectedHorseInfo = this.state.selectedHorseInfo; //if the isLoading state is true render this\n\n    if (this.state.preload === true || this.state.isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this);\n    } //if not loading render this:\n    else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"UPDATE HORSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Horse Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"horse_name\",\n                  value: selectedHorseInfo.horse_name,\n                  onChange: this.handleChange,\n                  maxLength: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Horse Passport Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"passport_no\",\n                  value: selectedHorseInfo.passport_no,\n                  onChange: this.handleChange,\n                  maxLength: \"15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Weight in Kilograms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.weight_kg,\n                  name: \"weight_kg\",\n                  onChange: this.handleChange,\n                  maxLength: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Height in Centremetres\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.height_cm,\n                  name: \"height_cm\",\n                  onChange: this.handleChange,\n                  maxLength: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Horse Colour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.colour,\n                  name: \"colour\",\n                  onChange: this.handleChange,\n                  maxLength: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.description,\n                  name: \"description\",\n                  onChange: this.handleChange,\n                  maxLength: \"200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Horse Breed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.horse_breed,\n                  name: \"horse_breed\",\n                  onChange: this.handleChange,\n                  maxLength: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Client Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: selectedHorseInfo.client_name,\n                  name: \"client_name\",\n                  onChange: this.handleChange,\n                  maxLength: \"40\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  variant: \"success\",\n                  disabled: isLoading,\n                  onClick: !isLoading ? this.updateHorse : null,\n                  children: isLoading ? 'Update Horse Value' : 'Update Horse Values'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default UpdateHorse;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/UpdateHorse.jsx"],"names":["Axios","React","Component","Form","Col","Container","Row","Button","UpdateHorse","constructor","props","getHorses","loginToken","localStorage","getItem","defaults","headers","common","data","get","console","log","user","success","setState","state","isAuth","horses","horseArray","map","horse","horse_id","editHorse","push","selectedHorseInfo","horse_name","weight_kg","height_cm","colour","description","horse_breed","client_name","status","passport_no","preload","updateHorse","isLoading","params","user_id","post","then","response","catch","error","window","location","reload","handleChange","event","value","target","name","componentWillMount","render"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from 'react';\r\nimport './InputForm.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n//A form that presents the current values of the selected horse to be changed. \r\n//The new values are edited in and then saved.\r\nclass UpdateHorse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            preload: true,\r\n            editHorse: this.props.editHorse,\r\n            horses: [],\r\n            selectedHorseInfo: {\r\n\r\n                horse_id: \"\",\r\n                horse_name: \"\",\r\n                weight_kg: \"\",\r\n                height_cm: \"\",\r\n                colour: \"\",\r\n                description: \"\",\r\n                horse_breed: \"\",\r\n                client_name: \"\",\r\n                status: 'Under Supervision',\r\n                passport_no: \"\",\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n\r\n    //gets all horses that have been predicted with a matching userid gotten from the loginToken\r\n    getHorses = async () => {\r\n\r\n\r\n\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        // If inside the local-storage has the JWT token\r\n        if (loginToken) {\r\n\r\n            //Adding JWT token to axios default header\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n\r\n            // Fetching the user information\r\n            const { data } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\r\n            console.log(data)\r\n\r\n            //holds the result array\r\n            console.log(data.user)\r\n\r\n            // If user information is successfully received, add the horses to the 'horses' array in state\r\n            if (data.success && data.user) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    isAuth: true,\r\n                    horses: data.user\r\n\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        //creating a new array to hold the 2D array of the selected horse\r\n        const horseArray = [];\r\n\r\n        //a map loop is run through all of the users horses to match find the selected 'editHorse'. This is then pushed into the above array 'horseArray'\r\n        this.state.horses.map((horse) => {\r\n            if (horse.horse_id === this.state.editHorse)\r\n                horseArray.push(horse)\r\n        })\r\n\r\n\r\n        console.log(horseArray)\r\n\r\n        //using the selected horse's  2D array values to set the 'selectedHorseInfo' state.\r\n        this.setState({\r\n            selectedHorseInfo: {\r\n\r\n                horse_id: this.state.editHorse,\r\n                horse_name: horseArray[0].horse_name,\r\n                weight_kg: horseArray[0].weight_kg,\r\n                height_cm: horseArray[0].height_cm,\r\n                colour: horseArray[0].colour,\r\n                description: horseArray[0].description,\r\n                horse_breed: horseArray[0].horse_breed,\r\n                client_name: horseArray[0].client_name,\r\n                status: 'Under Supervision',\r\n                passport_no: horseArray[0].passport_no\r\n\r\n\r\n            }\r\n        })\r\n\r\n        console.log(this.state.selectedHorseInfo)\r\n\r\n\r\n\r\n        this.setState({ preload: false });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //sends the prediction to our database. If successful, this will update the horse's details.\r\n    updateHorse = () => {\r\n\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n\r\n        //the information that will be posted to our database using axios. It reflects the current state of the 'selectedHorseInfo'\r\n        const params = {\r\n\r\n            horse_id: this.state.editHorse,\r\n            horse_name: this.state.selectedHorseInfo.horse_name,\r\n            weight_kg: this.state.selectedHorseInfo.weight_kg,\r\n            height_cm: this.state.selectedHorseInfo.height_cm,\r\n            colour: this.state.selectedHorseInfo.colour,\r\n            description: this.state.selectedHorseInfo.description,\r\n            horse_breed: this.state.selectedHorseInfo.horse_breed,\r\n            client_name: this.state.selectedHorseInfo.client_name,\r\n            status: 'Under Supervision',\r\n            passport_no: this.state.selectedHorseInfo.passport_no\r\n\r\n\r\n\r\n        };\r\n\r\n        console.log(params.horse_name, params.weight_kg,\r\n            params.height_cm, params.colour, params.description,\r\n            params.horse_breed, params.client_name, params.user_id,\r\n            params.status, params.passport_no)\r\n\r\n        //posting our parameters to the php which will update our sql database\r\n        Axios.post(\"http://localhost/php-colicapp/updatehorse.php\", (params))\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        this.setState({ isLoading: false });\r\n\r\n        //refresh the window and bring the user back to the dashboard\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n\r\n    //when data changes live on the input form, this function updates the values of our from data\r\n    //this method handles all form changes apart from 'status'\r\n    handleChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        var selectedHorseInfo = this.state.selectedHorseInfo;\r\n        selectedHorseInfo[name] = value;\r\n        this.setState({\r\n            selectedHorseInfo\r\n        });\r\n    }\r\n\r\n    //componentWillMount() runs before any other code. The 'get account horses' into array is the first process to be carried out.\r\n    componentWillMount() {\r\n        this.getHorses();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        //creating variables to hold the isLoading and selectedHorseInfo states \r\n        const isLoading = this.state.isLoading;\r\n        const selectedHorseInfo = this.state.selectedHorseInfo;\r\n\r\n        //if the isLoading state is true render this\r\n        if (this.state.preload === true || this.state.isLoading === true) {\r\n            return (\r\n                <h1>loading</h1>\r\n            )\r\n        }\r\n\r\n        //if not loading render this:\r\n        else\r\n\r\n            return (\r\n\r\n\r\n\r\n                <div>\r\n                    <Container>\r\n                        <div>\r\n                            <h1 className=\"title\">UPDATE HORSE</h1>\r\n                        </div>\r\n                        <div className=\"content\">\r\n\r\n                            <Form>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Horse Name</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'horse_name' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"horse_name\"\r\n                                            value={selectedHorseInfo.horse_name}\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"25\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Horse Passport Number</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'passport_no' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"passport_no\"\r\n                                            value={selectedHorseInfo.passport_no}\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"15\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Weight in Kilograms</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'weight_kg' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.weight_kg}\r\n                                            name=\"weight_kg\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"3\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Height in Centremetres</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'height_cm' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.height_cm}\r\n                                            name=\"height_cm\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"3\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Horse Colour</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'colour' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.colour}\r\n                                            name=\"colour\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"10\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'description' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.description}\r\n                                            name=\"description\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"200\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Horse Breed</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'horse_breed' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.horse_breed}\r\n                                            name=\"horse_breed\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"20\">\r\n\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Client Name</Form.Label>\r\n                                        {/* This updates the selectedHorseInfo state as the input value is changed */}\r\n                                        {/* used to update 'client_name' state */}\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={selectedHorseInfo.client_name}\r\n                                            name=\"client_name\"\r\n                                            onChange={this.handleChange}\r\n                                            maxLength=\"40\">\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button\r\n                                            block\r\n                                            variant=\"success\"\r\n                                            disabled={isLoading}\r\n                                            onClick={!isLoading ? this.updateHorse : null}>\r\n                                            {/* when the horse is successfully updated, the form will refresh redirecting to the dashboard */}\r\n                                            {isLoading ? 'Update Horse Value' : 'Update Horse Values'}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </Container>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default UpdateHorse;"]},"metadata":{},"sourceType":"module"}