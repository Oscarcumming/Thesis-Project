{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\PredictionHistory.jsx\";\nimport React from 'react';\nimport Axios from \"axios\";\nimport { MyContext } from '../contexts/MyContext';\nimport { Component } from 'react';\nimport { CSVLink } from 'react-csv'; //Component displays the complete history of predictions made by the user across all horses \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PredictionHistory extends Component {\n  //Importing the MyContext.js state values. We are interested in theUser as we are retrieving predictions specific to the user account.\n  //MyContext is acting as a parental component. It passes its prop values down to this component. React is one directional meaning that props \n  //cannot be passed back up to the parent.\n  //constructor defines the initial state\n  constructor(props) {\n    super(props); //predictions state hold all the user predictions\n\n    this.handleCancelClick = event => {};\n\n    this.getPredict = async () => {\n      //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the the JWT token (and is therefore logged in)\n\n      if (loginToken) {\n        //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \n        //to request the API for database information.\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('http://localhost/php-colicapp/user-predictions.php');\n        console.log(data);\n        console.log(data.user); // If user information is successfully received, add the predictions to the 'predictions' array in state\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            predictions: data.user\n          });\n        }\n      }\n    };\n\n    this.state = {\n      predictions: []\n    }; //this syntax allows the getPredict() method to change the state values.\n\n    this.getPredict = this.getPredict.bind(this);\n  } //Cancel click resets our result state to null.\n\n\n  //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\n  componentWillMount() {\n    this.getPredict();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //table headers\n      _jsxDEV(\"div\", {\n        class: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"table-responsive-sm \",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table table-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              class: \"thead-dark\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Horse Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Survival Chance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Packed Cell volume\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pulse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Surgical Lesion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Temperature of Extremities\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Protein\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Peripheral Pulse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Lesion 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Surgery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [this.state.predictions.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.horse_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: item.prediction\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 23\n                  }, this), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.packed_cell_volume\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.pulse\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.surgical_lesion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.temp_of_extremities\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.total_protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.peripheral_pulse\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lesion_1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.surgery\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, item.horseID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: this.state.predictions,\n          children: \"Download me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} //establishing context state for user\n\n\nPredictionHistory.contextType = MyContext;\nPredictionHistory.contextType = MyContext;\nexport default PredictionHistory;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/PredictionHistory.jsx"],"names":["React","Axios","MyContext","Component","CSVLink","PredictionHistory","constructor","props","handleCancelClick","event","getPredict","loginToken","localStorage","getItem","defaults","headers","common","data","get","console","log","user","success","setState","state","isAuth","predictions","bind","componentWillMount","render","map","item","horse_name","prediction","date","time","packed_cell_volume","pulse","surgical_lesion","temp_of_extremities","total_protein","peripheral_pulse","lesion_1","surgery","horseID","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Axios from \"axios\";\r\nimport { MyContext } from '../contexts/MyContext'\r\nimport { Component } from 'react';\r\nimport { CSVLink } from 'react-csv';\r\n\r\n\r\n\r\n\r\n//Component displays the complete history of predictions made by the user across all horses \r\nclass PredictionHistory extends Component {\r\n\r\n  //Importing the MyContext.js state values. We are interested in theUser as we are retrieving predictions specific to the user account.\r\n  //MyContext is acting as a parental component. It passes its prop values down to this component. React is one directional meaning that props \r\n  //cannot be passed back up to the parent.\r\n  static contextType = MyContext;\r\n\r\n  //constructor defines the initial state\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //predictions state hold all the user predictions\r\n    this.state = {\r\n      predictions: [],\r\n    }\r\n\r\n    //this syntax allows the getPredict() method to change the state values.\r\n    this.getPredict = this.getPredict.bind(this);\r\n  }\r\n\r\n\r\n\r\n  //Cancel click resets our result state to null.\r\n  handleCancelClick = (event) => {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //method gets all of the of the predictions registered to the account and adds them to the state of the 'predictions' array\r\n  //this is handled in componentWillMount() meaning before any process or rendering begins, getPredict will run. This ensures our array \r\n  //has the prediction values before anything else happens\r\n  getPredict = async () => {\r\n\r\n    //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\r\n    const loginToken = localStorage.getItem('loginToken');\r\n\r\n    // If inside the local-storage has the the JWT token (and is therefore logged in)\r\n    if (loginToken) {\r\n\r\n      //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \r\n      //to request the API for database information.\r\n      Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n\r\n      // Fetching the user information\r\n      const { data } = await Axios.get('http://localhost/php-colicapp/user-predictions.php');\r\n      console.log(data)\r\n\r\n\r\n      console.log(data.user)\r\n\r\n      // If user information is successfully received, add the predictions to the 'predictions' array in state\r\n      if (data.success && data.user) {\r\n        this.setState({\r\n          ...this.state,\r\n          isAuth: true,\r\n          predictions: data.user\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\r\n  componentWillMount() {\r\n    this.getPredict();\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      //table headers\r\n      <div class=\"container-fluid\">\r\n        <div class=\"table-responsive-sm \">\r\n          <table class=\"table table-light\">\r\n            <thead class=\"thead-dark\">\r\n              <tr>\r\n                <th>Horse Name</th>\r\n                <th>Survival Chance</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Packed Cell volume</th>\r\n                <th>Pulse</th>\r\n                <th>Surgical Lesion</th>\r\n                <th>Temperature of Extremities</th>\r\n                <th>Total Protein</th>\r\n                <th>Peripheral Pulse</th>\r\n                <th>Lesion 1</th>\r\n                <th>Surgery</th>\r\n\r\n              </tr>\r\n            </thead>\r\n\r\n            {/* table values */}\r\n            <tbody>\r\n              {/* A loop is used to output the 'predictions' 2D array into the table contents .  */}\r\n              {this.state.predictions.map((item =>\r\n                <tr key={item.horseID} >\r\n                  <td>{item.horse_name}</td>\r\n                  <td><b>{item.prediction}</b>%</td>\r\n                  <td>{item.date}</td>\r\n                  <td>{item.time}</td>\r\n                  <td>{item.packed_cell_volume}</td>\r\n                  <td>{item.pulse}</td>\r\n                  <td>{item.surgical_lesion}</td>\r\n                  <td>{item.temp_of_extremities}</td>\r\n                  <td>{item.total_protein}</td>\r\n                  <td>{item.peripheral_pulse}</td>\r\n                  <td>{item.lesion_1}</td>\r\n                  <td>{item.surgery}</td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Allows download of output data in csv format */}\r\n        <CSVLink data={this.state.predictions} >Download me</CSVLink>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n//establishing context state for user\r\nPredictionHistory.contextType = MyContext;\r\n\r\nexport default PredictionHistory;"]},"metadata":{},"sourceType":"module"}