{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\DischargeHorse.jsx\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport Axios from \"axios\"; //this component presents three buttons that can be clicked to change the 'status' value of the horse.\n//This is done when the vet discharges a horse after their services have been rendered.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DischargeHorse extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //These hold props that has been passed from the parental file 'ProfileDashboard.jsx'\n      //These values are passed to allow us to adjust the 'status' value of the selected horse\n      dischargeValue: this.props.dischargeValue,\n      //array to hold all horse predictions\n      horses: []\n    };\n\n    this.getHorses = async () => {\n      //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the the JWT token (and is therefore logged in)\n\n      if (loginToken) {\n        //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \n        //to request the API for database information.\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the users registered horses\n\n        const {\n          data\n        } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\n        console.log(data);\n        console.log(data.user); // If user information is successfully received, add the horses to the 'horses' array in state\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            horses: data.user\n          });\n        }\n      }\n    };\n\n    this.dischargeDead = () => {\n      console.log(this.state.dischargeValue);\n      const params = {\n        horse_id: this.state.dischargeValue\n      }; //axios makes a post request to our local server API. It will set horse status to 'Discharged : Dead'\n\n      Axios.post(\"http://localhost/php-colicapp/discharge-dead.php\", params).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      }); //refreshes the page and brings the user back to the\n\n      window.location.reload();\n    };\n\n    this.dischargeUnderTreatment = () => {\n      console.log(this.state.dischargeValue);\n      const params = {\n        horse_id: this.state.dischargeValue\n      }; // //axios makes a post request to our local server API. It will set horse status to 'Discharged : Under Treatment'\n\n      Axios.post(\"http://localhost/php-colicapp/discharge-undertreatment.php\", params).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      }); //refreshes the page and brings the user back to the\n      // window.location.reload();\n\n      window.location.reload();\n    };\n\n    this.dischargeFullyRecovered = () => {\n      console.log(this.state.dischargeValue);\n      const params = {\n        horse_id: this.state.dischargeValue\n      }; // //axios makes a post request to our local server API. It will set horse status to 'Discharged : Fully Recovered'\n\n      Axios.post(\"http://localhost/php-colicapp/discharge-fullyrecovered.php\", params).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      }); //refreshes the page and brings the user back to the\n\n      window.location.reload();\n    };\n  }\n\n  //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\n  componentWillMount() {\n    this.getHorses();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"DISCHARGE HORSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-fluid \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm  text-center spacing\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-fluid \",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Choose Discharge Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark spacing\",\n              onClick: this.dischargeDead,\n              children: \"Discharge : Dead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark spacing\",\n              onClick: this.dischargeUnderTreatment,\n              children: \"Discharge : Under Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-dark spacing\",\n              onClick: this.dischargeFullyRecovered,\n              children: \"Discharge : Fully Recovered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DischargeHorse;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/DischargeHorse.jsx"],"names":["Component","React","Axios","DischargeHorse","state","dischargeValue","props","horses","getHorses","loginToken","localStorage","getItem","defaults","headers","common","data","get","console","log","user","success","setState","isAuth","dischargeDead","params","horse_id","post","then","response","catch","error","window","location","reload","dischargeUnderTreatment","dischargeFullyRecovered","componentWillMount","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport React from 'react';\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\n//this component presents three buttons that can be clicked to change the 'status' value of the horse.\r\n//This is done when the vet discharges a horse after their services have been rendered.\r\nclass DischargeHorse extends Component {\r\n\r\n  //creating component state\r\n  state = {\r\n\r\n    //These hold props that has been passed from the parental file 'ProfileDashboard.jsx'\r\n    //These values are passed to allow us to adjust the 'status' value of the selected horse\r\n    dischargeValue: this.props.dischargeValue,\r\n\r\n\r\n    //array to hold all horse predictions\r\n    horses: [],\r\n\r\n  }\r\n\r\n\r\n\r\n  //method gets all of the of the horses registered to the account and adds them to the state of the 'horses' array\r\n  //this is handled in componentWillMount() meaning before any process or rendering begins, getHorses will run. This ensures our array \r\n  //has the horse values before anything else happens\r\n  getHorses = async () => {\r\n\r\n\r\n    //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\r\n    const loginToken = localStorage.getItem('loginToken');\r\n\r\n    // If inside the local-storage has the the JWT token (and is therefore logged in)\r\n    if (loginToken) {\r\n\r\n      //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \r\n      //to request the API for database information.\r\n      Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n\r\n      // Fetching the users registered horses\r\n      const { data } = await Axios.get('http://localhost/php-colicapp/user-horses.php');\r\n      console.log(data)\r\n\r\n\r\n      console.log(data.user)\r\n\r\n      // If user information is successfully received, add the horses to the 'horses' array in state\r\n      if (data.success && data.user) {\r\n        this.setState({\r\n          ...this.state,\r\n          isAuth: true,\r\n          horses: data.user\r\n\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\n  //this method takes the 'dischargeValue' (horse_id) and sends it to the discharge-dead.php API\r\n  //This will update the status of the selected horse to \"Discharged : Dead\"\r\n  dischargeDead = () => {\r\n\r\n    console.log(this.state.dischargeValue)\r\n\r\n    const params = {\r\n\r\n      horse_id: this.state.dischargeValue,\r\n\r\n\r\n    };\r\n\r\n    //axios makes a post request to our local server API. It will set horse status to 'Discharged : Dead'\r\n    Axios.post(\"http://localhost/php-colicapp/discharge-dead.php\", (params))\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n    //refreshes the page and brings the user back to the\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  //this method takes the 'dischargeValue' (horse_id) and sends it to the discharge-undertreatment.php API\r\n   //This will update the status of the selected horse to \"Discharged : Under Treatment\"\r\n  dischargeUnderTreatment = () => {\r\n\r\n    console.log(this.state.dischargeValue)\r\n\r\n    const params = {\r\n\r\n      horse_id: this.state.dischargeValue,\r\n\r\n\r\n    };\r\n\r\n    // //axios makes a post request to our local server API. It will set horse status to 'Discharged : Under Treatment'\r\n    Axios.post(\"http://localhost/php-colicapp/discharge-undertreatment.php\", (params))\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n    //refreshes the page and brings the user back to the\r\n    // window.location.reload();\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  //this method takes the 'dischargeValue' (horse_id) and sends it to the discharge-fullyrecovered.php API\r\n  //This will update the status of the selected horse to \"Discharged : Fully Recovered\"\r\n  dischargeFullyRecovered = () => {\r\n\r\n    console.log(this.state.dischargeValue)\r\n\r\n    const params = {\r\n\r\n      horse_id: this.state.dischargeValue,\r\n\r\n\r\n    };\r\n\r\n    // //axios makes a post request to our local server API. It will set horse status to 'Discharged : Fully Recovered'\r\n    Axios.post(\"http://localhost/php-colicapp/discharge-fullyrecovered.php\", (params))\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n    //refreshes the page and brings the user back to the\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n\r\n\r\n  //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\r\n  componentWillMount() {\r\n    this.getHorses();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div>\r\n          <h1 className=\"title\">DISCHARGE HORSE</h1>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"container-fluid \">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm  text-center spacing\">\r\n\r\n              <div class=\"container-fluid \">\r\n                <h3>Choose Discharge Option</h3>\r\n              </div>\r\n\r\n              {/* three buttons that discharge the horse as 'Discharged : Dead', 'Discharged : Under Treatment' & 'Discharged : Fully Recovered' */}\r\n              {/* Button to take to discharge horse as 'Discharged : Dead' */}\r\n              <button type=\"button\" class=\"btn btn-dark spacing\" onClick={this.dischargeDead}>\r\n                Discharge : Dead\r\n              </button>\r\n              {/* Button to take to discharge horse as 'Discharged : Under Treatment' */}\r\n              <button type=\"button\" class=\"btn btn-dark spacing\" onClick={this.dischargeUnderTreatment}>\r\n                Discharge : Under Treatment\r\n              </button>\r\n              {/* Button to take to discharge horse as 'Discharged : Fully Recovered'  */}\r\n              <button type=\"button\" class=\"btn btn-dark spacing\" onClick={this.dischargeFullyRecovered}>\r\n                Discharge : Fully Recovered\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default DischargeHorse;"]},"metadata":{},"sourceType":"module"}