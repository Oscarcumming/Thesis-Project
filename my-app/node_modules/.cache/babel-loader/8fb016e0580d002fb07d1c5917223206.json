{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\components\\\\SpecificPrediction.jsx\";\nimport { Component } from \"react\";\nimport React from 'react';\nimport Axios from \"axios\";\nimport { CSVLink } from 'react-csv'; //Outputs the predictions of only the selected horse\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SpecificPrediction extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //These hold props that has been passed from the parental file 'ProfileDashboard.jsx'\n      //These values are passed to allow us to get the predictions of a specific horse\n      selectedHorseID: this.props.selectedHorseID,\n      selectedHorseName: this.props.selectedHorseName,\n      //array to hold all horse predictions\n      predictions: []\n    };\n\n    this.getPredict = async () => {\n      //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the the JWT token (and is therefore logged in)\n\n      if (loginToken) {\n        //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \n        //to request the API for database information.\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('http://localhost/php-colicapp/user-predictions.php');\n        console.log(data);\n        console.log(data.user); // If user information is successfully received, add the predictions to the 'predictions' array in state\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            predictions: data.user\n          });\n        }\n      }\n    };\n  }\n\n  //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\n  componentWillMount() {\n    this.getPredict();\n  }\n\n  render() {\n    //creating variable to hold the horse_id that has been given to us by the parent list\n    const selectedHorseName = this.state.selectedHorseName; //creating an array to hold the matching 'horse_id' prediction results. We have to place the mapped array within an array object.\n    // We do this to prevent null values being pushed into the array.\n\n    const array = []; //loop that takes the 'predictions' state and adds matching 'horse_id' predictions to the above array. This will be used to present results below\n\n    const values = this.state.predictions.map(predicition => {\n      if (predicition.horse_id === this.state.selectedHorseID) array.push(predicition);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: selectedHorseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"table-responsive-sm \",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table table-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              class: \"thead-dark\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Prediction ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Horse ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Horse Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Survival Chance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Packed Cell Volume\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pulse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Surgical Lesion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Temperature of Extremities\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Protein\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Peripheral Pulse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Lesion 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 18\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Surgery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 18\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: array.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.prediction_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.horse_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.horse_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [item.prediction, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.packed_cell_volume\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.pulse\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.surgical_lesion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.temp_of_extremities\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.total_protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.peripheral_pulse\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lesion_1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.surgery\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 20\n                }, this)]\n              }, item.predicition_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 18\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(CSVLink, {\n            data: array,\n            children: \"Download me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default SpecificPrediction;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/components/SpecificPrediction.jsx"],"names":["Component","React","Axios","CSVLink","SpecificPrediction","state","selectedHorseID","props","selectedHorseName","predictions","getPredict","loginToken","localStorage","getItem","defaults","headers","common","data","get","console","log","user","success","setState","isAuth","componentWillMount","render","array","values","map","predicition","horse_id","push","item","prediction_id","horse_name","prediction","date","time","packed_cell_volume","pulse","surgical_lesion","temp_of_extremities","total_protein","peripheral_pulse","lesion_1","surgery","predicition_id"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport React from 'react';\r\nimport Axios from \"axios\";\r\nimport {CSVLink} from 'react-csv';\r\n\r\n\r\n\r\n//Outputs the predictions of only the selected horse\r\nclass SpecificPrediction extends Component {\r\n\r\n    //creating component state\r\n    state = {\r\n\r\n      //These hold props that has been passed from the parental file 'ProfileDashboard.jsx'\r\n      //These values are passed to allow us to get the predictions of a specific horse\r\n       selectedHorseID : this.props.selectedHorseID,\r\n       selectedHorseName : this.props.selectedHorseName,\r\n\r\n       //array to hold all horse predictions\r\n       predictions: [],\r\n\r\n    }\r\n\r\n    \r\n\r\n//method gets all of the of the predictions registered to the account and adds them to the state of the 'predictions' array\r\n  //this is handled in componentWillMount() meaning before any process or rendering begins, getPredict will run. This ensures our array \r\n  //has the prediction values before anything else happens\r\n    getPredict = async () => {\r\n\r\n         //gets the login token cookie from our browser local storage. This will only be present if successfully logged in. It is a JWT token.\r\n        const loginToken = localStorage.getItem('loginToken');\r\n    \r\n      \r\n           // If inside the local-storage has the the JWT token (and is therefore logged in)\r\n        if (loginToken) {\r\n    \r\n          //Adding JWT token to axios default header - this allows access to the database. For security and access purposes. You need the token to be able \r\n      //to request the API for database information.\r\n          Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n    \r\n          // Fetching the user information\r\n          const { data } = await Axios.get('http://localhost/php-colicapp/user-predictions.php');\r\n          console.log(data)\r\n    \r\n      \r\n          console.log(data.user)\r\n    \r\n          // If user information is successfully received, add the predictions to the 'predictions' array in state\r\n          if (data.success && data.user) {\r\n            this.setState({\r\n              ...this.state,\r\n              isAuth: true,\r\n              predictions: data.user\r\n    \r\n            });\r\n          }\r\n    \r\n        }\r\n    \r\n      }\r\n    \r\n     //componentWillMount() runs before any other code. The account prediction array is the first process to be carried out.\r\n      componentWillMount() {\r\n        this.getPredict();\r\n       \r\n    \r\n      }\r\n      \r\n\r\n\r\n    render() {\r\n\r\n      //creating variable to hold the horse_id that has been given to us by the parent list\r\n        const selectedHorseName = this.state.selectedHorseName;\r\n\r\n        //creating an array to hold the matching 'horse_id' prediction results. We have to place the mapped array within an array object.\r\n        // We do this to prevent null values being pushed into the array.\r\n        const array = []\r\n\r\n        //loop that takes the 'predictions' state and adds matching 'horse_id' predictions to the above array. This will be used to present results below\r\n        const values = this.state.predictions.map((predicition) => {if(predicition.horse_id === this.state.selectedHorseID)\r\n          array.push(predicition)\r\n  })\r\n\r\n      \r\n\r\n\r\n          return(\r\n\r\n            \r\n\r\n           <div>\r\n             {/* horse name variable used to output the selected horses name that we are viewing the predictions of*/}\r\n              <h3 className=\"title\">{selectedHorseName}</h3>\r\n              \r\n\r\n              <div class=\"container-fluid\">\r\n            <div class=\"table-responsive-sm \">\r\n              <table class=\"table table-light\">\r\n                <thead class=\"thead-dark\">\r\n               <tr>\r\n                  <th>Prediction ID</th>\r\n                 <th>Horse ID</th>\r\n                 <th>Horse Name</th>\r\n                 <th>Survival Chance</th>\r\n                 <th>Date</th>\r\n                 <th>Time</th>\r\n                 <th>Packed Cell Volume</th>\r\n                 <th>Pulse</th>\r\n                 <th>Surgical Lesion</th>\r\n                 <th>Temperature of Extremities</th>\r\n                 <th>Total Protein</th>\r\n                 <th>Peripheral Pulse</th>\r\n                 <th>Lesion 1</th>\r\n                 <th>Surgery</th>\r\n                \r\n               </tr>\r\n             </thead>\r\n             {/* table values */}\r\n             <tbody>\r\n                {/* A loop is used to output the 'array' 2D array into the table contents .  */}\r\n               {array.map((item =>\r\n                 <tr key={item.predicition_id} >\r\n                   <td>{item.prediction_id}</td>\r\n                   <td>{item.horse_id}</td>\r\n                   <td>{item.horse_name}</td>\r\n                   <td><b>{item.prediction}%</b></td>\r\n                   <td>{item.date}</td>\r\n                   <td>{item.time}</td>\r\n                   <td>{item.packed_cell_volume}</td>\r\n                   <td>{item.pulse}</td>\r\n                   <td>{item.surgical_lesion}</td>\r\n                   <td>{item.temp_of_extremities}</td>\r\n                   <td>{item.total_protein}</td>\r\n                   <td>{item.peripheral_pulse}</td>\r\n                   <td>{item.lesion_1}</td>\r\n                   <td>{item.surgery}</td>\r\n                   \r\n\r\n                 \r\n                 </tr>\r\n               ))}\r\n               \r\n             </tbody>\r\n \r\n           </table>\r\n           </div>\r\n           {/* Allows download of output data in csv format */}\r\n           <p>\r\n           <CSVLink data={array} >Download me</CSVLink>\r\n           </p>\r\n            \r\n         </div>\r\n\r\n\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            </div>\r\n   \r\n  \r\n  \r\n      \r\n        )\r\n    }\r\n        }\r\n\r\n\r\n\r\nexport default SpecificPrediction;"]},"metadata":{},"sourceType":"module"}