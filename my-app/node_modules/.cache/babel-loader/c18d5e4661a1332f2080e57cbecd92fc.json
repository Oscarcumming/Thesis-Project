{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Dropbox\\\\Semester 3\\\\Colic Web App\\\\40316282_FINAL\\\\my-app\\\\src\\\\contexts\\\\MyContext.js\";\nimport React, { createContext, Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext(); //Reference is taken from : https://www.w3jar.com/react-js-php-mysql-db-login-registration-system/\n//This code is unchanged from the above source\n// Define the base URL to run the other axios requests from\n\nconst Axios = axios.create({\n  baseURL: 'http://localhost/php-colicapp/'\n}); //this will be the parental class that holds login state. This can then be imported in other components and methods.\n\nclass MyContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showLogin: true,\n      isAuth: false,\n      theUser: null\n    };\n\n    this.toggleNav = () => {\n      const showLogin = !this.state.showLogin;\n      this.setState({ ...this.state,\n        showLogin\n      });\n    };\n\n    this.logoutUser = () => {\n      localStorage.removeItem('loginToken');\n      this.setState({ ...this.state,\n        isAuth: false\n      });\n    };\n\n    this.registerUser = async user => {\n      // Sending the user registration request\n      const register = await Axios.post('register.php', {\n        name: user.name,\n        email: user.email,\n        password: user.password\n      });\n      return register.data;\n    };\n\n    this.loginUser = async user => {\n      // Sending the user Login request\n      const login = await Axios.post('login.php', {\n        email: user.email,\n        password: user.password\n      });\n      return login.data;\n    };\n\n    this.isLoggedIn = async () => {\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the JWT token\n\n      if (loginToken) {\n        //Adding JWT token to axios default header\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('user-info.php'); // If user information is successfully received\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            theUser: data.user\n          });\n        }\n      }\n    };\n\n    this.isLoggedIn();\n  } // Root State - Acts as a parental state that can be used in other components and functions to determine if the user is currently logged in or not.\n  //Also allows the retrieval of userdata through 'theUser' state which is needed for saving predictions and horses\n\n\n  render() {\n    //creating an object to hold all the states\n    const contextValue = {\n      rootState: this.state,\n      toggleNav: this.toggleNav,\n      isLoggedIn: this.isLoggedIn,\n      registerUser: this.registerUser,\n      loginUser: this.loginUser,\n      logoutUser: this.logoutUser\n    };\n    return (\n      /*#__PURE__*/\n      //wrapping the above object values in MyContext.Provider to allow other components and functions use of the states and function.\n      //These props can be passed to children\n      _jsxDEV(MyContext.Provider, {\n        value: contextValue,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default MyContextProvider;","map":{"version":3,"sources":["C:/Users/oscar/Dropbox/Semester 3/Colic Web App/40316282_FINAL/my-app/src/contexts/MyContext.js"],"names":["React","createContext","Component","axios","MyContext","Axios","create","baseURL","MyContextProvider","constructor","state","showLogin","isAuth","theUser","toggleNav","setState","logoutUser","localStorage","removeItem","registerUser","user","register","post","name","email","password","data","loginUser","login","isLoggedIn","loginToken","getItem","defaults","headers","common","get","success","render","contextValue","rootState","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,OAAO,MAAMC,SAAS,gBAAGH,aAAa,EAA/B,C,CAGP;AACA;AAEA;;AACA,MAAMI,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAd,C,CAIA;;AACA,MAAMC,iBAAN,SAAgCN,SAAhC,CAAyC;AAGrCO,EAAAA,WAAW,GAAE;AACT;AADS,SAQbC,KARa,GAQL;AACJC,MAAAA,SAAS,EAAC,IADN;AAEJC,MAAAA,MAAM,EAAC,KAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,KARK;;AAAA,SAiBbC,SAjBa,GAiBD,MAAM;AACd,YAAMH,SAAS,GAAG,CAAC,KAAKD,KAAL,CAAWC,SAA9B;AACA,WAAKI,QAAL,CAAc,EACV,GAAG,KAAKL,KADE;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAvBY;;AAAA,SA0BbK,UA1Ba,GA0BA,MAAM;AACfC,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACA,WAAKH,QAAL,CAAc,EACV,GAAG,KAAKL,KADE;AAEVE,QAAAA,MAAM,EAAC;AAFG,OAAd;AAIH,KAhCY;;AAAA,SAmCbO,YAnCa,GAmCE,MAAOC,IAAP,IAAgB;AAE3B;AACA,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,cAAX,EAA0B;AAC7CC,QAAAA,IAAI,EAACH,IAAI,CAACG,IADmC;AAE7CC,QAAAA,KAAK,EAACJ,IAAI,CAACI,KAFkC;AAG7CC,QAAAA,QAAQ,EAACL,IAAI,CAACK;AAH+B,OAA1B,CAAvB;AAMA,aAAOJ,QAAQ,CAACK,IAAhB;AACH,KA7CY;;AAAA,SAgDbC,SAhDa,GAgDD,MAAOP,IAAP,IAAgB;AAExB;AACA,YAAMQ,KAAK,GAAG,MAAMvB,KAAK,CAACiB,IAAN,CAAW,WAAX,EAAuB;AACvCE,QAAAA,KAAK,EAACJ,IAAI,CAACI,KAD4B;AAEvCC,QAAAA,QAAQ,EAACL,IAAI,CAACK;AAFyB,OAAvB,CAApB;AAIA,aAAOG,KAAK,CAACF,IAAb;AACH,KAxDY;;AAAA,SA2DbG,UA3Da,GA2DA,YAAY;AACrB,YAAMC,UAAU,GAAGb,YAAY,CAACc,OAAb,CAAqB,YAArB,CAAnB,CADqB,CAGrB;;AACA,UAAGD,UAAH,EAAc;AAEV;AACAzB,QAAAA,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAUJ,UAA3D,CAHU,CAKV;;AACA,cAAM;AAACJ,UAAAA;AAAD,YAAS,MAAMrB,KAAK,CAAC8B,GAAN,CAAU,eAAV,CAArB,CANU,CAQV;;AACA,YAAGT,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACN,IAAxB,EAA6B;AACzB,eAAKL,QAAL,CAAc,EACV,GAAG,KAAKL,KADE;AAEVE,YAAAA,MAAM,EAAC,IAFG;AAGVC,YAAAA,OAAO,EAACa,IAAI,CAACN;AAHH,WAAd;AAKH;AAEJ;AACJ,KAjFY;;AAET,SAAKS,UAAL;AAEH,GAPoC,CASrC;AACA;;;AA+EAQ,EAAAA,MAAM,GAAE;AAEJ;AACA,UAAMC,YAAY,GAAG;AACjBC,MAAAA,SAAS,EAAC,KAAK7B,KADE;AAEjBI,MAAAA,SAAS,EAAC,KAAKA,SAFE;AAGjBe,MAAAA,UAAU,EAAC,KAAKA,UAHC;AAIjBV,MAAAA,YAAY,EAAC,KAAKA,YAJD;AAKjBQ,MAAAA,SAAS,EAAC,KAAKA,SALE;AAMjBX,MAAAA,UAAU,EAAC,KAAKA;AANC,KAArB;AAQA;AAAA;AAEI;AACA;AACA,cAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,EAAEsB,YAA3B;AAAA,kBACK,KAAKE,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAQH;;AA5GoC;;AAgHzC,eAAejC,iBAAf","sourcesContent":["import React, { createContext,Component } from \"react\";\r\nimport axios from 'axios'\r\nexport const MyContext = createContext();\r\n\r\n\r\n//Reference is taken from : https://www.w3jar.com/react-js-php-mysql-db-login-registration-system/\r\n//This code is unchanged from the above source\r\n\r\n// Define the base URL to run the other axios requests from\r\nconst Axios = axios.create({\r\n    baseURL: 'http://localhost/php-colicapp/',\r\n});\r\n\r\n//this will be the parental class that holds login state. This can then be imported in other components and methods.\r\nclass MyContextProvider extends Component{\r\n\r\n\r\n    constructor(){\r\n        super();\r\n        this.isLoggedIn();\r\n        \r\n    }\r\n\r\n    // Root State - Acts as a parental state that can be used in other components and functions to determine if the user is currently logged in or not.\r\n    //Also allows the retrieval of userdata through 'theUser' state which is needed for saving predictions and horses\r\n    state = {\r\n        showLogin:true,\r\n        isAuth:false,\r\n        theUser: null,\r\n        \r\n    }\r\n    \r\n    \r\n    // Toggle between Login & Signup page - not needed\r\n    toggleNav = () => {\r\n        const showLogin = !this.state.showLogin;\r\n        this.setState({\r\n            ...this.state,\r\n            showLogin\r\n        })\r\n    }\r\n\r\n    // On Click the Log out button - removes 'logintoken' and set 'isAuth' state to false. Is used to conditionally render ie. reroute to login if trying to access the /dashboard\r\n    logoutUser = () => {\r\n        localStorage.removeItem('loginToken');\r\n        this.setState({\r\n            ...this.state,\r\n            isAuth:false\r\n        })\r\n    }\r\n\r\n\r\n    registerUser = async (user) => {\r\n\r\n        // Sending the user registration request\r\n        const register = await Axios.post('register.php',{\r\n            name:user.name,\r\n            email:user.email,\r\n            password:user.password \r\n        });\r\n\r\n        return register.data;\r\n    }\r\n\r\n\r\n    loginUser = async (user) => {\r\n\r\n        // Sending the user Login request\r\n        const login = await Axios.post('login.php',{\r\n            email:user.email,\r\n            password:user.password\r\n        });\r\n        return login.data;\r\n    }\r\n\r\n    // Checking user logged in or not\r\n    isLoggedIn = async () => {\r\n        const loginToken = localStorage.getItem('loginToken');\r\n\r\n        // If inside the local-storage has the JWT token\r\n        if(loginToken){\r\n\r\n            //Adding JWT token to axios default header\r\n            Axios.defaults.headers.common['Authorization'] = 'bearer '+loginToken;\r\n\r\n            // Fetching the user information\r\n            const {data} = await Axios.get('user-info.php');\r\n\r\n            // If user information is successfully received\r\n            if(data.success && data.user){\r\n                this.setState({\r\n                    ...this.state,\r\n                    isAuth:true,\r\n                    theUser:data.user\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    \r\n \r\n\r\n    render(){\r\n\r\n        //creating an object to hold all the states\r\n        const contextValue = {\r\n            rootState:this.state,\r\n            toggleNav:this.toggleNav,\r\n            isLoggedIn:this.isLoggedIn,\r\n            registerUser:this.registerUser,\r\n            loginUser:this.loginUser,\r\n            logoutUser:this.logoutUser,\r\n        }\r\n        return(\r\n\r\n            //wrapping the above object values in MyContext.Provider to allow other components and functions use of the states and function.\r\n            //These props can be passed to children\r\n            <MyContext.Provider value={contextValue}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MyContextProvider;"]},"metadata":{},"sourceType":"module"}